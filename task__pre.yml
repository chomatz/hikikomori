---

- name: ensure tasks run only on selected os releases
  block:

    - name: disable steam deck readonly protection
      ansible.builtin.include_role:
        name: linux_gaming
        tasks_from: steam_deck_readonly_disable.yml

    - name: initialize steam deck repositories
      ansible.builtin.include_role:
        name: linux_gaming
        tasks_from: steam_deck_repository.yml

  when:
    - ansible_distribution == "Archlinux"
    - ansible_distribution_release == "holo"

- name: identify fedora variants
  ansible.builtin.shell:
    cmd: "grep ^ID= /etc/os-release | sed 's/ID=//'"
  register: os_id
  changed_when: false
  when: ansible_distribution == "Fedora"

- name: display os id
  ansible.builtin.debug:
    var: os_id.stdout
    verbosity: 1

- name: create temporary work directory
  ansible.builtin.tempfile:
    state: directory
    prefix: ansible_
    suffix: _deleteme
  register: ansible_work_dir
  vars:
    ansible_become: false

- name: create temporary topgrade environment
  block:

    - name: get default topgrade configuration
      ansible.builtin.shell:
        cmd: "ujust --show update | grep topgrade | xargs | cut -d ' ' -f 3"
      register: topgrade_config

    - name: create topgrade root configuration
      ansible.builtin.shell:
        cmd: >
          sed
          -e 's/"flatpak", //'
          -e 's/, "flatpak"//'
          -e 's/"brew_cask", //'
          -e 's/, "brew_cask"//'
          -e 's/"brew_formula", //'
          -e 's/, "brew_formula"//'
          -e 's/"custom_commands", //'
          -e 's/, "custom_commands"//'
          {{ topgrade_config.stdout }} >
          {{ ansible_work_dir.path }}/topgrade_root.toml

    - name: create topgrade user configuration
      ansible.builtin.shell:
        cmd: >
          sed
          -e 's/"system", //'
          -e 's/, "system"//'
          -e 's/"firmware", //'
          -e 's/, "firmware"//'
          {{ topgrade_config.stdout }} >
          {{ ansible_work_dir.path }}/topgrade_user.toml

  when: os_id.stdout == "bazzite"
  vars:
    ansible_become: false

...
